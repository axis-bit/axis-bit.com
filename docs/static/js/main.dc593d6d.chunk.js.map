{"version":3,"sources":["me.jpg","components/Menu.js","components/Profile.js","components/Awards.js","components/Works.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","MenuWrap","className","Wrap","href","styled","div","Profile","ProfileWrap","id","Data","Img","Image","src","me","alt","Info","img","Awards","AwardsWrap","idName","Works","WorksWrap","Contact","ContactWrap","App","Name","h1","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,gC,2iBCgB5BC,MAbf,WACE,OACE,kBAACC,EAAD,CAAUC,UAAU,QAClB,kBAACC,EAAD,KACE,uBAAGC,KAAK,YAAR,WACA,uBAAGA,KAAK,UAAR,SACA,uBAAGA,KAAK,WAAR,UACA,uBAAGA,KAAK,YAAR,cAQFD,EAAOE,IAAOC,IAAV,KASJL,EAAWI,IAAOC,IAAV,K,wyBCqBCC,MA3Cf,WACE,OACE,kBAACC,EAAD,CAAaC,GAAG,WAEd,uCACA,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,CAAOC,IAAKC,IAAIC,IAAI,oBAGtB,kBAACC,EAAD,KACE,yBAAKd,UAAU,WACb,4CACA,4BACE,2CACA,2DAIJ,yBAAKA,UAAU,UACb,4CACA,4BACE,6FACA,6FACA,yIAIJ,yBAAKA,UAAU,SACb,4CACA,4BACE,0DACA,gDACA,oDAYRM,EAAcH,IAAOC,IAAV,KAEXI,EAAOL,IAAOC,IAAV,KAQJU,EAAOX,IAAOC,IAAV,KAMJK,EAAMN,IAAOC,IAAV,KAQHM,EAAQP,IAAOY,IAAV,K,wFCzDIC,MAdf,WACE,OACE,kBAACC,EAAD,CAAYC,OAAO,UACjB,sCACA,4BACE,mMACA,yDACA,gGACA,2DAQFD,EAAad,IAAOC,IAAV,K,6FCEDe,MAlBf,WACE,OACE,kBAACC,EAAD,CAAWb,GAAG,SACZ,qCAEA,uCACA,4BACE,uCACA,qCACA,kDACA,wCACA,yCACA,yCAQFa,EAAYjB,IAAOC,IAAV,K,kGCVAiB,MAVf,WACE,OACE,kBAACC,EAAD,CAAatB,UAAU,WACrB,uCACA,uBAAGE,KAAK,iCAAR,sBAA8D,6BAC9D,uBAAGA,KAAK,sCAAR,qBAOAoB,EAAcnB,IAAOC,IAAV,K,qUCcFmB,MAjBf,WACE,OACE,yBAAKvB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAACwB,EAAD,kCAAY,6BAAZ,mBAEA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SAUFvB,EAAOE,IAAOC,IAAV,KAUJoB,EAAOrB,IAAOsB,GAAV,KC9BUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.dc593d6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.091eb863.jpg\";","import React from 'react';\nimport styled from 'styled-components';\n\nfunction Menu() {\n  return (\n    <MenuWrap className=\"Menu\">\n      <Wrap>\n        <a href=\"#Profile\">Profile</a>\n        <a href=\"#Works\">Works</a>\n        <a href=\"#Awards\">Awards</a>\n        <a href=\"#Contact\">Contact</a>\n      </Wrap>\n    </MenuWrap>\n  )\n}\n\nexport default Menu;\n\nconst Wrap = styled.div`\n  width: 690px;\n  margin: 0 auto;\n  @media screen and (max-width: 600px) {\n    width: calc(100% - 32px);\n    margin: 0 16px;\n  }\n`\n\nconst MenuWrap = styled.div`\n  padding: 8px 0px;\n  background: #052849;\n  a{\n    color: #ffffff;\n    padding-right: 16px;\n  }\n`","import React from 'react';\nimport styled from 'styled-components';\n\nimport me from '../me.jpg';\n\nfunction Profile() {\n  return (\n    <ProfileWrap id=\"Profile\">\n\n      <h2>Profile</h2>\n      <Data>\n        <Img>\n          <Image src={me} alt=\"Furuta Katsumi\" />\n        </Img>\n\n        <Info>\n          <div className=\"Belongs\">\n            <h4>所属</h4>\n            <ul>\n              <li>Gupero inc.</li>\n              <li>Yasuaki Kakehi Laboratory</li>\n            </ul>\n          </div>\n\n          <div className=\"Career\">\n            <h4>経歴</h4>\n            <ul>\n              <li>1998年 3月 神奈川県生まれ</li>\n              <li>2015年 8月 株式会社Gupero設立</li>\n              <li>2016年 4月 慶應義塾大学環境情報学部入学</li>\n            </ul>\n          </div>\n\n          <div className=\"Field\">\n            <h4>分野</h4>\n            <ul>\n              <li>Human computer interaction</li>\n              <li>Machine learning</li>\n              <li>Growth hacking</li>\n            </ul>\n          </div>\n\n        </Info>\n      </Data>\n    </ProfileWrap>\n  )\n}\n\nexport default Profile;\n\nconst ProfileWrap = styled.div``\n\nconst Data = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  @media screen and (max-width: 600px) {\n    flex-direction: column;\n  }\n`\n\nconst Info = styled.div`\n  width: 66.5%;\n  @media screen and (max-width: 600px) {\n    width: calc(100% - 32px);\n  }\n`\nconst Img = styled.div`\n  width: 33.5%;\n  @media screen and (max-width: 600px) {\n    width: calc(100% - 32px);\n  }\n`\n\n\nconst Image = styled.img`\n  width: 168px;\n  margin: 32px 0;\n  text-algin: center;\n  @media screen and (max-width: 600px) {\n    margin: 0;\n  }\n`\n","import React from 'react';\nimport styled from 'styled-components';\n\nfunction Awards() {\n  return (\n    <AwardsWrap idName=\"Awards\">\n      <h2>Awards</h2>\n      <ul>\n        <li>2019 第22回文化庁メディア芸術祭アート部門審査委員会推薦作品</li>\n        <li>2015 TECH LAUNCH AUDITION</li>\n        <li>2014 アプリ甲子園2014 準優勝</li>\n        <li>2014 Mashup Awards10 U25</li>\n      </ul>\n    </AwardsWrap>\n  )\n}\n\nexport default Awards;\n\nconst AwardsWrap = styled.div`\n  padding: 0px;\n`","import React from 'react';\nimport styled from 'styled-components';\n\nfunction Works() {\n  return (\n    <WorksWrap id=\"Works\">\n      <h2>Works</h2>\n\n      <h4>Company</h4>\n      <ul>\n        <li>OneNova</li>\n        <li>Timee</li>\n        <li>RelationTechnology</li>\n        <li>GayaChat</li>\n        <li>TouchSpot</li>\n        <li>MICOLY</li>\n      </ul>\n    </WorksWrap>\n  )\n}\n\nexport default Works;\n\nconst WorksWrap = styled.div`\n  padding: 64px 0px;\n`","import React from 'react';\nimport styled from 'styled-components';\n\nfunction Contact() {\n  return (\n    <ContactWrap className=\"Contact\">\n      <h2>Contact</h2>\n      <a href=\"mailto:withcomputer@gmail.com\">withcomputer@gmail</a><br/>\n      <a href=\"https://twitter.com/furuta_katsumi\">@furuta_katsumi</a>\n    </ContactWrap>\n  )\n}\n\nexport default Contact;\n\nconst ContactWrap = styled.div`\n  padding: 0px 0px 128px;\n`","import React from 'react';\nimport styled from 'styled-components'\n\n\nimport Menu from './components/Menu'\nimport Profile from './components/Profile'\nimport Awards from './components/Awards'\nimport Works from './components/Works'\nimport Contact from './components/Contact'\n\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu />\n      <Wrap>\n        <Name>古田 克海 <br/> Furuta Katsumi</Name>\n\n        <Profile />\n        <Awards />\n        <Works />\n        <Contact />\n      </Wrap>\n\n    </div>\n  );\n}\n\nexport default App;\n\n\nconst Wrap = styled.div`\n  width: 690px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 600px) {\n    width: calc(100% - 32px);\n    margin: 0 16px;\n  }\n`\n\nconst Name = styled.h1`\n  line-height: 1.5;\n  margin: 64px 0;\n`","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}